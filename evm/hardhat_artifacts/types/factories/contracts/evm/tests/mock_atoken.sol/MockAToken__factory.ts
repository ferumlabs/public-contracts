/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MockAToken,
  MockATokenInterface,
} from "../../../../../contracts/evm/tests/mock_atoken.sol/MockAToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_TREASURY_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "UNDERLYING_ASSET_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "handleRepayment",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mintToTreasury",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rescueTokens",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferOnLiquidation",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferUnderlyingTo",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200194d3803806200194d83398181016040528101906200003791906200018f565b6040518060400160405280600e81526020017f4d6f636b526562617365436f696e0000000000000000000000000000000000008152506040518060400160405280600581526020017f4d434f494e0000000000000000000000000000000000000000000000000000008152508160039081620000b491906200043b565b508060049081620000c691906200043b565b50505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000522565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001438262000116565b9050919050565b6000620001578262000136565b9050919050565b62000169816200014a565b81146200017557600080fd5b50565b60008151905062000189816200015e565b92915050565b600060208284031215620001a857620001a762000111565b5b6000620001b88482850162000178565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200024357607f821691505b602082108103620002595762000258620001fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002c37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000284565b620002cf868362000284565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200031c620003166200031084620002e7565b620002f1565b620002e7565b9050919050565b6000819050919050565b6200033883620002fb565b62000350620003478262000323565b84845462000291565b825550505050565b600090565b6200036762000358565b620003748184846200032d565b505050565b5b818110156200039c57620003906000826200035d565b6001810190506200037a565b5050565b601f821115620003eb57620003b5816200025f565b620003c08462000274565b81016020851015620003d0578190505b620003e8620003df8562000274565b83018262000379565b50505b505050565b600082821c905092915050565b60006200041060001984600802620003f0565b1980831691505092915050565b60006200042b8383620003fd565b9150826002028217905092915050565b6200044682620001c1565b67ffffffffffffffff811115620004625762000461620001cc565b5b6200046e82546200022a565b6200047b828285620003a0565b600060209050601f831160018114620004b357600084156200049e578287015190505b620004aa85826200041d565b8655506200051a565b601f198416620004c3866200025f565b60005b82811015620004ed57848901518255600182019150602085019450602081019050620004c6565b868310156200050d578489015162000509601f891682620003fd565b8355505b6001600288020188555050505b505050505050565b61141b80620005326000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637ecebe00116100c3578063b3f1c93d1161007c578063b3f1c93d146103a0578063cea9d26f146103d0578063d505accf146103ec578063d7020d0a14610408578063dd62ed3e14610424578063f866c319146104545761014d565b80637ecebe00146102ca57806395d89b41146102fa5780639dc29fac14610318578063a9059cbb14610334578063ae16733514610364578063b16a19de146103825761014d565b80633644e515116101155780633644e5151461020c57806340c10f191461022a5780634efecaa5146102465780636fd976761461026257806370a082311461027e5780637df5bd3b146102ae5761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806323b872dd146101be578063313ce567146101ee575b600080fd5b61015a610470565b6040516101679190610e9a565b60405180910390f35b61018a60048036038101906101859190610f55565b610502565b6040516101979190610fb0565b60405180910390f35b6101a8610525565b6040516101b59190610fda565b60405180910390f35b6101d860048036038101906101d39190610ff5565b61052f565b6040516101e59190610fb0565b60405180910390f35b6101f661055e565b6040516102039190611064565b60405180910390f35b610214610567565b6040516102219190611098565b60405180910390f35b610244600480360381019061023f9190610f55565b61056c565b005b610260600480360381019061025b9190610f55565b61057a565b005b61027c60048036038101906102779190610ff5565b61057f565b005b610298600480360381019061029391906110b3565b610584565b6040516102a59190610fda565b60405180910390f35b6102c860048036038101906102c391906110e0565b6105cc565b005b6102e460048036038101906102df91906110b3565b6105d1565b6040516102f19190610fda565b60405180910390f35b6103026105d6565b60405161030f9190610e9a565b60405180910390f35b610332600480360381019061032d9190610f55565b610668565b005b61034e60048036038101906103499190610f55565b610676565b60405161035b9190610fb0565b60405180910390f35b61036c610699565b604051610379919061112f565b60405180910390f35b61038a61069e565b604051610397919061112f565b60405180910390f35b6103ba60048036038101906103b5919061114a565b6106c8565b6040516103c79190610fb0565b60405180910390f35b6103ea60048036038101906103e59190610ff5565b6106cd565b005b61040660048036038101906104019190611209565b6106d2565b005b610422600480360381019061041d919061114a565b6106d7565b005b61043e600480360381019061043991906112ab565b6106dc565b60405161044b9190610fda565b60405180910390f35b61046e60048036038101906104699190610ff5565b610763565b005b60606003805461047f9061131a565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab9061131a565b80156104f85780601f106104cd576101008083540402835291602001916104f8565b820191906000526020600020905b8154815290600101906020018083116104db57829003601f168201915b5050505050905090565b60008061050d610768565b905061051a818585610770565b600191505092915050565b6000600254905090565b60008061053a610768565b9050610547858285610782565b610552858585610816565b60019150509392505050565b60006012905090565b600080fd5b610576828261090a565b5050565b600080fd5b600080fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600080fd5b6060600480546105e59061131a565b80601f01602080910402602001604051908101604052809291908181526020018280546106119061131a565b801561065e5780601f106106335761010080835404028352916020019161065e565b820191906000526020600020905b81548152906001019060200180831161064157829003601f168201915b5050505050905090565b610672828261098c565b5050565b600080610681610768565b905061068e818585610816565b600191505092915050565b600080fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080fd5b600033905090565b61077d8383836001610a0e565b505050565b600061078e84846106dc565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108105781811015610800578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107f79392919061134b565b60405180910390fd5b61080f84848484036000610a0e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108885760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161087f919061112f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108fa5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108f1919061112f565b60405180910390fd5b610905838383610be5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361097c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610973919061112f565b60405180910390fd5b61098860008383610be5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109fe5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109f5919061112f565b60405180910390fd5b610a0a82600083610be5565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a805760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610a77919061112f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610af25760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ae9919061112f565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610bdf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610bd69190610fda565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c37578060026000828254610c2b91906113b1565b92505081905550610d0a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610cc3578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610cba9392919061134b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d535780600260008282540392505081905550610da0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610dfd9190610fda565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e44578082015181840152602081019050610e29565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e6c82610e0a565b610e768185610e15565b9350610e86818560208601610e26565b610e8f81610e50565b840191505092915050565b60006020820190508181036000830152610eb48184610e61565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610eec82610ec1565b9050919050565b610efc81610ee1565b8114610f0757600080fd5b50565b600081359050610f1981610ef3565b92915050565b6000819050919050565b610f3281610f1f565b8114610f3d57600080fd5b50565b600081359050610f4f81610f29565b92915050565b60008060408385031215610f6c57610f6b610ebc565b5b6000610f7a85828601610f0a565b9250506020610f8b85828601610f40565b9150509250929050565b60008115159050919050565b610faa81610f95565b82525050565b6000602082019050610fc56000830184610fa1565b92915050565b610fd481610f1f565b82525050565b6000602082019050610fef6000830184610fcb565b92915050565b60008060006060848603121561100e5761100d610ebc565b5b600061101c86828701610f0a565b935050602061102d86828701610f0a565b925050604061103e86828701610f40565b9150509250925092565b600060ff82169050919050565b61105e81611048565b82525050565b60006020820190506110796000830184611055565b92915050565b6000819050919050565b6110928161107f565b82525050565b60006020820190506110ad6000830184611089565b92915050565b6000602082840312156110c9576110c8610ebc565b5b60006110d784828501610f0a565b91505092915050565b600080604083850312156110f7576110f6610ebc565b5b600061110585828601610f40565b925050602061111685828601610f40565b9150509250929050565b61112981610ee1565b82525050565b60006020820190506111446000830184611120565b92915050565b6000806000806080858703121561116457611163610ebc565b5b600061117287828801610f0a565b945050602061118387828801610f0a565b935050604061119487828801610f40565b92505060606111a587828801610f40565b91505092959194509250565b6111ba81611048565b81146111c557600080fd5b50565b6000813590506111d7816111b1565b92915050565b6111e68161107f565b81146111f157600080fd5b50565b600081359050611203816111dd565b92915050565b600080600080600080600060e0888a03121561122857611227610ebc565b5b60006112368a828b01610f0a565b97505060206112478a828b01610f0a565b96505060406112588a828b01610f40565b95505060606112698a828b01610f40565b945050608061127a8a828b016111c8565b93505060a061128b8a828b016111f4565b92505060c061129c8a828b016111f4565b91505092959891949750929550565b600080604083850312156112c2576112c1610ebc565b5b60006112d085828601610f0a565b92505060206112e185828601610f0a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061133257607f821691505b602082108103611345576113446112eb565b5b50919050565b60006060820190506113606000830186611120565b61136d6020830185610fcb565b61137a6040830184610fcb565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113bc82610f1f565b91506113c783610f1f565b92508282019050808211156113df576113de611382565b5b9291505056fea26469706673582212201cd14f2a306045c7c1f4efd30a1510607da5bca27486028cee16059affbae51364736f6c63430008170033";

type MockATokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockATokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAToken__factory extends ContractFactory {
  constructor(...args: MockATokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _underlying: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_underlying, overrides || {});
  }
  override deploy(
    _underlying: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_underlying, overrides || {}) as Promise<
      MockAToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAToken__factory {
    return super.connect(runner) as MockAToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockATokenInterface {
    return new Interface(_abi) as MockATokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockAToken {
    return new Contract(address, _abi, runner) as unknown as MockAToken;
  }
}
